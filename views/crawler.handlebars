<!doctype html>
<html lang="en">
<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <script src="https://d3js.org/d3.v5.min.js"></script>

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="css/bootstrap.min.css">

    <title>Ginan Graphical Web Crawler</title>
    <style type="text/css">
        .link {
            stroke: #aaa;
        }

        .node text {
            stroke: #333;
            cursos: pointer;
        }

        .node circle {
            stroke: #fff;
            stroke-width: 3px;
            fill: #555;
        }
    </style>

</head>
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
      <a class="navbar-brand" href="#">Ginan Web Crawler</a>
    </nav>
    <div class="container">
      <form>
        <fieldset>
        <div class="form-group">
          <label for="exampleInputURL">Starting URL</label>
          <div class="col-sm-4">
            <input type="url" class="form-control" id="exampleInputURL" aria-describedby="URLHelp" placeholder="Enter Starting URL">
          </div>
          <small id="URLHelp" class="form-text text-muted">Enter the Url for the webpage to start your crawl from</small>
        </div>
        </fieldset>
        <fieldset class="form-group">
          <label for="crawlLimit">Crawl Limit</label>
          <div class="col-sm-2">
            <input type="number" class="form-control" id="crawlLimit" aria-describedby="limitHelp" placeholder="1" min="1" max="10">
          </div>
          <small id="limitHelp" class="form-text text-muted">Enter the number of links to crawl betweeen 1 - x </small>
        </fieldset>
        <fieldset class="form-group">
          <legend>Crawl Type</legend>
          <div class="col-sm-3">
            <div class="form-check">
              <label class="form-check-label">
                <input type="radio" class="form-check-input" name="optionsRadios" id="optionsRadios1" value="option1" checked="">
                Depth Crawl
              </label>
            </div>
            <div class="form-check">
              <label class="form-check-label">
                <input type="radio" class="form-check-input" name="optionsRadios" id="optionsRadios2" value="option2">
                Breadth Crawl
              </label>
            </div>
          </div>
          <small id="crawlTypeHelp" class="form-text text-muted">Choose the type of crawl you would like to perform </small>
        </fieldset>
        <fieldset>
          <button type="submit" class="btn btn-primary">Crawl</button>
        </fieldset>
      </form>
    </div>
    <div class="container">
      <div class="jumbotron" id="svg">
      </div>
    </div>

    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
    
    <script>
        var width = 960,
            height = 500

        var svg = d3.select("body").append("svg")
            .attr("width", width)
            .attr("height", height);

        var force = d3.forceSimulation()
            .gravity(.05)
            .distance(100)
            .charge(-100)
            .size([width, height]);

        d3.json("graphFile.json", function (json) {
            force
                .nodes(json.nodes)
                .links(json.links)
                .start();

            var link = svg.selectAll(".link")
                .data(json.links)
                .enter().append("line")
                .attr("class", "link")
                .style("stroke-width", function (d) { return Math.sqrt(d.weight); });

            var node = svg.selectAll(".node")
                .data(json.nodes)
                .enter().append("g")
                .attr("class", "node")
                .call(force.drag);

            node.append("circle")
                .attr("r", "5");

            node.append("text")
                .attr("dx", 12)
                .attr("dy", ".35em")
                .text(function (d) { return d.name });

            force.on("tick", function () {
                link.attr("x1", function (d) { return d.source.x; })
                    .attr("y1", function (d) { return d.source.y; })
                    .attr("x2", function (d) { return d.target.x; })
                    .attr("y2", function (d) { return d.target.y; });

                node.attr("transform", function (d) { return "translate(" + d.x + "," + d.y + ")"; });
            });
        });
    </script>
  </body>
</html>
